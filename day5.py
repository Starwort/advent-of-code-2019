data = [
    int(i)
    for i in "3,225,1,225,6,6,1100,1,238,225,104,0,2,171,209,224,1001,224,-1040,224,4,224,102,8,223,223,1001,224,4,224,1,223,224,223,102,65,102,224,101,-3575,224,224,4,224,102,8,223,223,101,2,224,224,1,223,224,223,1102,9,82,224,1001,224,-738,224,4,224,102,8,223,223,1001,224,2,224,1,223,224,223,1101,52,13,224,1001,224,-65,224,4,224,1002,223,8,223,1001,224,6,224,1,223,224,223,1102,82,55,225,1001,213,67,224,1001,224,-126,224,4,224,102,8,223,223,1001,224,7,224,1,223,224,223,1,217,202,224,1001,224,-68,224,4,224,1002,223,8,223,1001,224,1,224,1,224,223,223,1002,176,17,224,101,-595,224,224,4,224,102,8,223,223,101,2,224,224,1,224,223,223,1102,20,92,225,1102,80,35,225,101,21,205,224,1001,224,-84,224,4,224,1002,223,8,223,1001,224,1,224,1,224,223,223,1101,91,45,225,1102,63,5,225,1101,52,58,225,1102,59,63,225,1101,23,14,225,4,223,99,0,0,0,677,0,0,0,0,0,0,0,0,0,0,0,1105,0,99999,1105,227,247,1105,1,99999,1005,227,99999,1005,0,256,1105,1,99999,1106,227,99999,1106,0,265,1105,1,99999,1006,0,99999,1006,227,274,1105,1,99999,1105,1,280,1105,1,99999,1,225,225,225,1101,294,0,0,105,1,0,1105,1,99999,1106,0,300,1105,1,99999,1,225,225,225,1101,314,0,0,106,0,0,1105,1,99999,1008,677,677,224,1002,223,2,223,1006,224,329,101,1,223,223,1108,226,677,224,1002,223,2,223,1006,224,344,101,1,223,223,7,677,226,224,102,2,223,223,1006,224,359,1001,223,1,223,8,677,226,224,102,2,223,223,1005,224,374,1001,223,1,223,1107,677,226,224,102,2,223,223,1006,224,389,1001,223,1,223,1008,226,226,224,1002,223,2,223,1005,224,404,1001,223,1,223,7,226,677,224,102,2,223,223,1005,224,419,1001,223,1,223,1007,677,677,224,102,2,223,223,1006,224,434,1001,223,1,223,107,226,226,224,1002,223,2,223,1005,224,449,1001,223,1,223,1008,677,226,224,102,2,223,223,1006,224,464,1001,223,1,223,1007,677,226,224,1002,223,2,223,1005,224,479,1001,223,1,223,108,677,677,224,1002,223,2,223,1006,224,494,1001,223,1,223,108,226,226,224,1002,223,2,223,1006,224,509,101,1,223,223,8,226,677,224,102,2,223,223,1006,224,524,101,1,223,223,107,677,226,224,1002,223,2,223,1005,224,539,1001,223,1,223,8,226,226,224,102,2,223,223,1005,224,554,101,1,223,223,1108,677,226,224,102,2,223,223,1006,224,569,101,1,223,223,108,677,226,224,102,2,223,223,1006,224,584,1001,223,1,223,7,677,677,224,1002,223,2,223,1005,224,599,101,1,223,223,1007,226,226,224,102,2,223,223,1005,224,614,1001,223,1,223,1107,226,677,224,102,2,223,223,1006,224,629,101,1,223,223,1107,226,226,224,102,2,223,223,1005,224,644,1001,223,1,223,1108,677,677,224,1002,223,2,223,1005,224,659,101,1,223,223,107,677,677,224,1002,223,2,223,1006,224,674,1001,223,1,223,4,223,99,226".split(
        ","
    )
]
data2 = [
    int(i)
    for i in "3,225,1,225,6,6,1100,1,238,225,104,0,2,171,209,224,1001,224,-1040,224,4,224,102,8,223,223,1001,224,4,224,1,223,224,223,102,65,102,224,101,-3575,224,224,4,224,102,8,223,223,101,2,224,224,1,223,224,223,1102,9,82,224,1001,224,-738,224,4,224,102,8,223,223,1001,224,2,224,1,223,224,223,1101,52,13,224,1001,224,-65,224,4,224,1002,223,8,223,1001,224,6,224,1,223,224,223,1102,82,55,225,1001,213,67,224,1001,224,-126,224,4,224,102,8,223,223,1001,224,7,224,1,223,224,223,1,217,202,224,1001,224,-68,224,4,224,1002,223,8,223,1001,224,1,224,1,224,223,223,1002,176,17,224,101,-595,224,224,4,224,102,8,223,223,101,2,224,224,1,224,223,223,1102,20,92,225,1102,80,35,225,101,21,205,224,1001,224,-84,224,4,224,1002,223,8,223,1001,224,1,224,1,224,223,223,1101,91,45,225,1102,63,5,225,1101,52,58,225,1102,59,63,225,1101,23,14,225,4,223,99,0,0,0,677,0,0,0,0,0,0,0,0,0,0,0,1105,0,99999,1105,227,247,1105,1,99999,1005,227,99999,1005,0,256,1105,1,99999,1106,227,99999,1106,0,265,1105,1,99999,1006,0,99999,1006,227,274,1105,1,99999,1105,1,280,1105,1,99999,1,225,225,225,1101,294,0,0,105,1,0,1105,1,99999,1106,0,300,1105,1,99999,1,225,225,225,1101,314,0,0,106,0,0,1105,1,99999,1008,677,677,224,1002,223,2,223,1006,224,329,101,1,223,223,1108,226,677,224,1002,223,2,223,1006,224,344,101,1,223,223,7,677,226,224,102,2,223,223,1006,224,359,1001,223,1,223,8,677,226,224,102,2,223,223,1005,224,374,1001,223,1,223,1107,677,226,224,102,2,223,223,1006,224,389,1001,223,1,223,1008,226,226,224,1002,223,2,223,1005,224,404,1001,223,1,223,7,226,677,224,102,2,223,223,1005,224,419,1001,223,1,223,1007,677,677,224,102,2,223,223,1006,224,434,1001,223,1,223,107,226,226,224,1002,223,2,223,1005,224,449,1001,223,1,223,1008,677,226,224,102,2,223,223,1006,224,464,1001,223,1,223,1007,677,226,224,1002,223,2,223,1005,224,479,1001,223,1,223,108,677,677,224,1002,223,2,223,1006,224,494,1001,223,1,223,108,226,226,224,1002,223,2,223,1006,224,509,101,1,223,223,8,226,677,224,102,2,223,223,1006,224,524,101,1,223,223,107,677,226,224,1002,223,2,223,1005,224,539,1001,223,1,223,8,226,226,224,102,2,223,223,1005,224,554,101,1,223,223,1108,677,226,224,102,2,223,223,1006,224,569,101,1,223,223,108,677,226,224,102,2,223,223,1006,224,584,1001,223,1,223,7,677,677,224,1002,223,2,223,1005,224,599,101,1,223,223,1007,226,226,224,102,2,223,223,1005,224,614,1001,223,1,223,1107,226,677,224,102,2,223,223,1006,224,629,101,1,223,223,1107,226,226,224,102,2,223,223,1005,224,644,1001,223,1,223,1108,677,677,224,1002,223,2,223,1005,224,659,101,1,223,223,107,677,677,224,1002,223,2,223,1006,224,674,1001,223,1,223,4,223,99,226".split(
        ","
    )
]


class IP:
    def __init__(self):
        self.address = 0

    def set(self, new_address):
        self.address = new_address

    def get(self):
        return self.address


def add(i, a, b, c, ip):
    i[c] = i[a] + i[b]


def mul(i, a, b, c, ip):
    i[c] = i[a] * i[b]


def take_input(i, a, ip):
    i[a] = int(input("Enter input\n>>> "))


def output(i, a, ip):
    print(i[a])


def jnz(i, a, b, ip):
    if i[a]:
        ip.set(i[b] - 3)


def jz(i, a, b, ip):
    if not i[a]:
        ip.set(i[b] - 3)


def tlt(i, a, b, c, ip):
    if i[a] < i[b]:
        i[c] = 1
    else:
        i[c] = 0


def teq(i, a, b, c, ip):
    if i[a] == i[b]:
        i[c] = 1
    else:
        i[c] = 0


# data[1] = 12
# data[2] = 2

codes = [None, add, mul, take_input, output, jnz, jz, tlt, teq]
offsets = [0, 4, 4, 2, 2, 3, 3, 4, 4]
position = IP()
opcode = data[position.get()]
while True:
    # print(opcode, position + 1, position + 2, position + 3)
    # print(opcode, data[position + 1], data[position + 2], data[position + 3])
    third_param_mode, opcode = divmod(opcode, 10000)
    second_param_mode, opcode = divmod(opcode, 1000)
    first_param_mode, opcode = divmod(opcode, 100)
    # print(opcode)
    parameters = data[position.get() + 1 : position.get() + offsets[opcode]]
    # print(opcode, parameters)
    if first_param_mode:
        parameters[0] = data.index(parameters[0])
    if len(parameters) > 1:
        if second_param_mode:
            parameters[1] = data.index(parameters[1])
        if third_param_mode:
            parameters[2] = data.index(parameters[2])
    codes[opcode](data, *parameters, position)
    position.set(position.get() + offsets[opcode])
    opcode = data[position.get()]
    if opcode == 99:
        # print(data[0])
        # print(data)
        break
position = IP()
opcode = data2[position.get()]
while True:
    # print(opcode, position + 1, position + 2, position + 3)
    # print(opcode, data2[position + 1], data2[position + 2], data2[position + 3])
    third_param_mode, opcode = divmod(opcode, 10000)
    second_param_mode, opcode = divmod(opcode, 1000)
    first_param_mode, opcode = divmod(opcode, 100)
    # print(position.get(), opcode, third_param_mode, second_param_mode, first_param_mode)
    parameters = data2[position.get() + 1 : position.get() + offsets[opcode]]
    if first_param_mode:
        parameters[0] = data2.index(parameters[0])
    if len(parameters) > 1:
        if second_param_mode:
            parameters[1] = data2.index(parameters[1])
        if third_param_mode:
            parameters[2] = data2.index(parameters[2])
    # print(opcode, parameters)
    codes[opcode](data2, *parameters, position)
    position.set(position.get() + offsets[opcode])
    opcode = data2[position.get()]
    if opcode == 99:
        # print(data[0])
        # print(data)
        break
# print("err")
# print(data)
# for i in range(100):
#     for j in range(100):
#         data = [
#             int(i)
#             for i in "1,0,0,3,1,1,2,3,1,3,4,3,1,5,0,3,2,1,9,19,1,19,5,23,2,6,23,27,1,6,27,31,2,31,9,35,1,35,6,39,1,10,39,43,2,9,43,47,1,5,47,51,2,51,6,55,1,5,55,59,2,13,59,63,1,63,5,67,2,67,13,71,1,71,9,75,1,75,6,79,2,79,6,83,1,83,5,87,2,87,9,91,2,9,91,95,1,5,95,99,2,99,13,103,1,103,5,107,1,2,107,111,1,111,5,0,99,2,14,0,0".split(
#                 ","
#             )
#         ]
#         data[1] = i
#         data[2] = j
#         position = 0
#         opcode = data[position]
#         while opcode in (1, 2, 99):
#             # print(opcode, position + 1, position + 2, position + 3)
#             # print(opcode, data[position + 1], data[position + 2], data[position + 3])
#             codes[opcode](
#                 data, data[position + 1], data[position + 2], data[position + 3]
#             )
#             position += 4
#             opcode = data[position]
#             if opcode == 99:
#                 if data[0] == 19690720:
#                     print(i * 100 + j)
#                 # print(data)
#                 break
